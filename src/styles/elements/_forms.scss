$labelHeight: 24px;

$inputHeights: (
  'tiny': 32px,
  'small': 40px,
  'medium': 50px,
);

.input {
  position: relative;
  display: flex;
  flex-direction: column;
  margin-bottom: 1.5rem;

  &__label,
  &__field,
  &__message {
    width: 100%;
  }

  &__label {
    @extend .mb-25;
    @extend .font-weight-500;
    @extend .no-select;
    
    color: map-get($theme-colors, 'primary');
    min-height: 24px;
  }

  &__field {
    @extend .font-weight-500;
    @extend .radius-base;
    
    background: map-get($colors, 'white');
    color: $body-color;
    border-color: $border-color;
    border-width: 1px;
    border-style: solid;
    transition: border-color .3s ease;

    // Reset
    &[type=number] {
      -moz-appearance: textfield;
    }

    &[type=file] {
      display: none !important;
    }

    &:required {
      box-shadow: none !important;
    }

    &::-ms-clear {
      display: none !important;
    }

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    &:disabled {
      color: rgba($body-color, .75);
      border-color: rgba($border-color, .5);
      background: map-get($colors, 'grey');
      cursor: default;
    }

    // Textarea settings
    &[data-type="textarea"] {
      @extend .font-weight-400;

      width: 100%;
      min-height: 120px;
      resize: none;
      padding: 1em;
    }

    // Sizes
    &--tiny {
      min-height: map-get($inputHeights, 'tiny');
      padding: 0 .35rem;

      & ~ .input-group__prepend,
      & ~ .input__upload,
      & ~ .input__upload::after {
        min-height: map-get($inputHeights, 'tiny');
        padding: 0 .35rem;
      }
    }

    &--small {
      min-height: map-get($inputHeights, 'small');
      padding: 0 .5rem;

      & ~ .input-group__prepend,
      & ~ .input__upload,
      & ~ .input__upload::after {
        min-height: map-get($inputHeights, 'small');
        padding: 0 .5rem;
      }
    }

    &--medium {
      min-height: map-get($inputHeights, 'medium');
      padding: 0 1rem;

      & ~ .input-group__prepend,
      & ~ .input__upload,
      & ~ .input__upload::after {
        min-height: map-get($inputHeights, 'medium');
        padding: 0 1rem;
      }
    }

    // Focus
    &:focus {
      border-color: darken($border-color, 10%);
    }

    // Validation
    &--invalid {
      border-color: map-get($theme-colors, 'danger');
    }

    // Placeholder
    &::placeholder {
      font-weight: 500 !important;
      opacity: 1 !important;
      color: rgba($body-color, .5) !important;
      transition: all 0.15s ease !important;
    }

    &::-webkit-input-placeholder {
      font-weight: 500 !important;
      opacity: 1 !important;
      color: rgba($body-color, .5) !important;
      transition: all 0.15s ease !important;
    }

    &::-moz-placeholder {
      font-weight: 500 !important;
      opacity: 1 !important;
      color: rgba($body-color, .5) !important;
      transition: all 0.15s ease !important;
    }

    &:-ms-input-placeholder {
      font-weight: 500 !important;
      opacity: 1 !important;
      color: rgba($body-color, .5) !important;
      transition: all 0.15s ease !important;
    }

    &:-moz-placeholder {
      font-weight: 500 !important;
      opacity: 1 !important;
      color: rgba($body-color, .5) !important;
      transition: all 0.15s ease !important;
    }

    &:focus {
      &::placeholder {
        opacity: 0 !important;
      }

      &::-webkit-input-placeholder {
        opacity: 0 !important;
      }

      &::-moz-placeholder {
        opacity: 0 !important;
      }

      &:-ms-input-placeholder {
        opacity: 0 !important;
      }

      &:-moz-placeholder {
        opacity: 0 !important;
      }
    }
  }

  &__error {
    @extend .mt-25;
    @extend .small;

    color: map-get($theme-colors, 'danger');
  }

  &__upload {
    @extend .font-weight-500;
    @extend .radius-base;
    @extend .cursor-pointer;
    
    display: flex;
    align-items: center;
    padding-right: 0 !important;
    background: map-get($colors, 'white');
    color:  rgba($body-color, .5);
    border-color: $border-color;
    border-width: 1px;
    border-style: solid;
    transition: .3s ease;

    &--invalid {
      border-color: map-get($theme-colors, 'danger');
    }

    &::after {
      @extend .radius-tr-base;
      @extend .radius-br-base;

      content: 'Browse';
      display: flex;
      align-items: center;
      margin-left: auto;
      background-color: map-get($theme-colors, 'primary');
      color: map-get($colors, 'white');
      transition: .3s ease;
    }

    &:hover {
      &::after {
        @include material-shadow($z-depth: 2, $color: desaturate(map-get($theme-colors, 'primary'), 30%));

        background-color: lighten(map-get($theme-colors, 'primary'), 10%);
      }
    }
  }
}

.input-group {
  display: flex;
  align-items: stretch;
  width: 100%;

  .input {
    &__field {
      &:not(:last-child) {
        @extend .radius-tr-zero;
        @extend .radius-br-zero;
      }

      &:not(:first-child) {
        @extend .radius-tl-zero;
        @extend .radius-bl-zero;
      }
    }
  }

  &__prepend,
  &__append {
    display: flex;
    align-items: center;
    padding: 0 .75rem;
    background: map-get($colors, 'grey');
    color: $body-color;
    border-width: 1px;
    border-style: solid;
  }

  &__prepend {
    @extend .radius-tr-base;
    @extend .radius-br-base;

    border-top-color: $border-color;
    border-right-color: $border-color;
    border-bottom-color: $border-color;
    border-left-color: transparent;
  }

  &__append {
    @extend .radius-tl-base;
    @extend .radius-bl-base;

    border-top-color: $border-color;
    border-right-color: transparent;
    border-bottom-color: $border-color;
    border-left-color: $border-color;
  }
}

.checkbox {
  margin-bottom: 1.5rem;

  &__input {
    position: absolute;
    z-index: -1;
    opacity: 0;

    &:disabled {
      & + .checkbox__label {
        opacity: 0.5;
        pointer-events: none;
      }
    }

    &:not(disabled) {
      & + .checkbox__label {
        &::before {
          border-color: rgba(map-get($theme-colors, 'primary'), .5);
        }
      }

      &:checked + .checkbox__label {
        &::before {
          border-color: map-get($theme-colors, 'primary');
          background-color: map-get($theme-colors, 'primary');
          background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
        }
      }
    }
  }

  &__label {
    @extend .cursor-pointer;
    @extend .font-weight-500;
    @extend .no-select;

    display: inline-flex;
    align-items: center;
    color: map-get($theme-colors, 'primary');

    &::before {
      @extend .radius-small;
      
      content: '';
      display: inline-block;
      width: 1em;
      height: 1em;
      flex-shrink: 0;
      flex-grow: 0;
      border-style: solid;
      border-width: 1px;
      margin-right: 0.5em;
      background-repeat: no-repeat;
      background-position: center center;
      background-size: 70% 70%;
      transition: .3s ease;
    }

    &:hover {
      color: lighten(map-get($theme-colors, 'primary'), 10%);

      &::before {
        border-color: map-get($theme-colors, 'primary');
      }
    }
  }
}

.radio {
  margin-bottom: .25rem;

  &__input {
    display: none !important;

    &:checked + .radio__label {
      &::after {
        opacity: 1;
        transform: scale(1);
      }
    }
  }

  &__label {
    $labelSize: 1rem;

    position: relative;
    display: flex;
    align-items: center;
    padding-left: 1.5rem;
    cursor: pointer;
    user-select: none;

    &::before,
    &::after {
      @extend .radius-circle;
      
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      margin: auto;
    }

    &::before {
      left: 0;
      width: $labelSize;
      height: $labelSize;
      background: map-get($colors, 'grey');
      border: 1px solid $border-color;
    }

    &::after {
      left: $labelSize / 4;
      width: $labelSize / 2;
      height: $labelSize / 2;
      background: map-get($theme-colors, 'primary');
      opacity: 0;
      transform: scale(0);
      transform-origin: center center;
      transition: .3s ease;
    }
  }
}

// Color variants
@each $name, $value in $theme-colors {
  .checkbox-#{$name} {
    .checkbox {
      &__input {
        &:not(disabled) {
          &:checked + .checkbox__label {
            &::before {
              border-color: $value;
              background-color: $value;
            }
          }
        }
      }

      &__label {
        color: $value;

        &::before {
          border-color: rgba($value, .5);
        }

        &:hover {
          color: lighten($value, 10%);
    
          &::before {
            border-color: $value;
          }
        }
      }
    }
  }

  .radio-#{$name} {
    .radio {
      &__label {
        &::after {
          background: $value;
        }
      }
    }
  }
}