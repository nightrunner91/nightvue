// List of default colors
$colors: (
  'red':       #F44336,
  'pink':      #EC407A,
  'orange':    #FF9800,
  'yellow':    #FFEE58,
  'green':     #47b05b,
  'brown':     #795548,
  'teal':      #009688,
  'cyan':      #00BCD4,
  'blue':      #2196F3,
  'purple':    #682CAB,
);

// List of grey colors
$grays: (); // Here we will store our colors
$graysNum: 22; // Grey colors amount


// Generate map list of grey colors
$grays: map-merge($grays, ('white' : white));
@for $i from 1 through $graysNum {
  $percent: 100 / ($graysNum + 2) * $i * 1%; // Evaluate percent 
  $newGray: ('gray-#{$i}' : mix(black, white, $percent)); // Prepare temporary map
  $grays: map-merge($grays, $newGray); // Add this map to original $grays map
}
$grays: map-merge($grays, ('black' : black));

// Pick up theme colors from basic color pallete or material colors
$theme-colors: (
  'primary':    map-get($colors, 'purple'),
  'secondary':  map-get($colors, 'blue'),
  'success':    map-get($colors, 'green'),
  'info':       map-get($colors, 'teal'),
  'warning':    map-get($colors, 'yellow'),
  'danger':     map-get($colors, 'red'),
  'light':      map-get($grays, 'gray-4'),
  'dark':       map-get($grays, 'gray-18'),
);

// Levels of lighten and darken in $colors and $theme-colors list
$levels: (
  1: 10%,
  2: 15%,
  3: 20%,
  4: 25%,
  5: 30%,
);

@each $name, $code in $colors {
  .bg-#{$name} { background-color: $code !important }
  .clr-#{$name} { color: $code !important }
  .fill-#{$name} { fill: $code !important }

  @each $level, $rate in $levels {
    @if $name != 'black' and $name != 'white' {
      .bg-#{$name}-light-#{$level} { background-color: mix(white, $code, $rate) !important }
      .bg-#{$name}-dark-#{$level} { background-color: mix(black, $code, $rate) !important }

      .clr-#{$name}-light-#{$level} { color: mix(white, $code, $rate) !important }
      .clr-#{$name}-dark-#{$level} { color: mix(black, $code, $rate) !important }

      .fill-#{$name}-light-#{$level} { fill: mix(white, $code, $rate) !important }
      .fill-#{$name}-dark-#{$level} { fill: mix(black, $code, $rate) !important }
    }
  }
}

@each $name, $code in $theme-colors {
  .bg-#{$name} { background-color: $code !important }
  .clr-#{$name} { color: $code !important }
  .fill-#{$name} { fill: $code !important }

  @each $level, $rate in $levels {
    .bg-#{$name}-light-#{$level} { background-color: mix(white, $code, $rate) !important }
    .bg-#{$name}-dark-#{$level} { background-color: mix(black, $code, $rate) !important }

    .clr-#{$name}-light-#{$level} { color: mix(white, $code, $rate) !important }
    .clr-#{$name}-dark-#{$level} { color: mix(black, $code, $rate) !important }

    .fill-#{$name}-light-#{$level} { fill: mix(white, $code, $rate) !important }
    .fill-#{$name}-dark-#{$level} { fill: mix(black, $code, $rate) !important }
  }
}

@for $i from 1 through $graysNum {
  .bg-gray-#{$i} { background-color: map-get($grays, 'gray-#{$i}') !important }
  .clr-gray-#{$i} { color: map-get($grays, 'gray-#{$i}') !important }
  .fill-gray-#{$i} { fill: map-get($grays, 'gray-#{$i}') !important }
}