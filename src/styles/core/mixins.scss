@mixin linear-gradient($args...) {
  /// Mixin generates code that includes the default color for browsers 
  /// that do not support linear gradients and modern syntax
  ///
  /// @author nightrunner91
  /// 
  /// @link https://github.com/nightrunner91/nightvue
  /// @link https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient
  /// @link https://www.w3schools.com/css/css3_gradients.asp
  /// @link https://www.colorzilla.com/gradient-editor/
  ///
  /// @param $args: { Function } [map-get function to access $gradients map]
  /// 
  /// @example
  ///   @include linear-gradient(map-get($gradients, 'primary_success'));
  ///
  /// @output
  ///   background: #682cab;
  ///   background: linear-gradient(145deg, #8e51d2 10%, #68c279 80%);
  ///
  /// @example
  ///   $storedGradient: map-get($gradients, 'primary_success');
  ///   @include linear-gradient($storedGradient);
  ///
  /// @output
  ///   background: #682cab;
  ///   background: linear-gradient(145deg, #8e51d2 10%, #68c279 80%);

  $direction: nth(nth(nth($args, 1), 1), 2);
  $fallback:  nth(nth(nth($args, 1), 2), 2);
  $list:      nth(nth(nth($args, 1), 3), 2);

  background: $fallback;
  background: linear-gradient($direction, $list);
};


@mixin small() {
  /// Small mixin that injects small font-size styles
  /// See _varaibles.scss file for params $base-fz, $base-lh and $small-fz
  /// By default they are: 16px, 1.5, 0.875
  ///
  /// @author nightrunner91
  ///
  /// @link https://github.com/nightrunner91/nightvue
  /// 
  /// @example
  ///   @include small();
  ///
  /// @output
  ///   font-size: 14px;
  ///   line-height: 1.3125;

  font-size: $base-fz * $small-fz;
  line-height: $base-lh * $small-fz;
};


@mixin animation($name, $duration, $delay, $count, $timing, $mode) {
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $timing;
  animation-fill-mode: forwards;
  animation-delay: $delay;
  animation-iteration-count: $count;
  animation-direction: $mode;
};


@mixin icon-size($d1, $d2:false) {
  width: $d1 + px !important;
  max-width: $d1 + px !important;
  min-width: $d1 + px !important;

  @if ($d2) {
    height: $d2 + px !important;
    max-height: $d2 + px !important;
    min-height: $d2 + px !important;
    background-size: $d1 + px $dimension2 + px !important;
  } @else {
    height: $d1 + px !important;
    max-height: $d1 + px !important;
    min-height: $d1 + px !important;
    background-size: $d1 + px $d1 + px !important;
  }
};


@mixin transition($property, $speed, $timing, $delay:0s) {
  transition: $property map-get($transition-speed, $speed) map-get($transition-timings, $timing) $delay
};


@mixin complex-transition($args...) {
  transition: $args;
};
