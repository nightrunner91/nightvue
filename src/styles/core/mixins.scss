// ========= //
// GRADIENTS //
// ========= //
@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }
  
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

@mixin animation($name, $duration, $delay, $count, $timing, $mode) {
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $timing;
  animation-fill-mode: forwards;
  animation-delay: $delay;
  animation-iteration-count: $count;
  animation-direction: $mode;
}



@mixin shadow($name) {
  $targetMap: $shadows;
  @if map-has-key($material-shadows, $name) {
    $targetMap: $material-shadows;
  }

  box-shadow: map-get($targetMap, $name)
}


@mixin icon-size($dimension1, $dimesnion2:false) {
  width: $dimension1 + px !important;
  max-width: $dimension1 + px !important;
  min-width: $dimension1 + px !important;

  @if ($dimesnion2) {
    height: $dimesnion2 + px !important;
    max-height: $dimesnion2 + px !important;
    min-height: $dimesnion2 + px !important;
    background-size: $dimension1 + px $dimension2 + px !important;
  } @else {
    height: $dimension1 + px !important;
    max-height: $dimension1 + px !important;
    min-height: $dimension1 + px !important;
    background-size: $dimension1 + px $dimension1 + px !important;
  }
}


@mixin transition($property, $speed, $timing, $delay:0s) {
  transition: $property map-get($transition-speed, $speed) map-get($transition-timings, $timing) $delay
}


@mixin complex-transition($args...) {
  transition: $args;
}
