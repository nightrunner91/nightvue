stages:
  - build
  - deploy

build:
  image: node:10
  stage: build
  script:
    - npm install --progress=false --unsave-perm
    - npm run build
    - rm -f build.tar.gz
    - tar vcfz build.tar.gz ./dist/
  artifacts:
    expire_in: 72 hrs
    paths:
      - build.tar.gz
  only:
    - main

build_preproduction:
  image: node:12
  stage: build
  script:
    - npm install --progress=false --unsave-perm
    - npm run prebuild
    - rm -f build_preprod.tar.gz
    - tar vcfz build_preprod.tar.gz ./dist/
  artifacts:
    expire_in: 72 hrs
    paths:
      - build_preprod.tar.gz
  only:
    - develop

deploy:
  image: alpine
  stage: deploy
  when: manual
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PROD_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - tar xfvz build.tar.gz
    - rsync -ravv --exclude robots.txt --delete ./dist/ "$PROD_USER"@"$PROD_HOST":"$PROD_DEST_DIR"
  only:
    - main

deploy_preproduction:
  image: alpine
  stage: deploy
  needs:
    - build_preproduction
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRE_PROD_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - tar xfvz build_preprod.tar.gz
    - rsync -ravv  --exclude robots.txt --delete ./dist/ "$PRE_PROD_USER"@"$PRE_PROD_HOST":"$PRE_PROD_DEST_DIR"
  only:
    - develop
